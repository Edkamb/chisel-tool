module NTank;

data HybridSpec =  ObjInv(String) | Ensures(String) | Requires(String) | Tactic(String);

type Real = Rat;

interface IDummy {
    Unit resetLimit(Real r);

    [HybridSpec: Requires("0 < r")]
    Unit bucket(Real r);
}

[HybridSpec: Requires("0 < inVal & inVal < inLimit")]
class CDummy(Real inVal, Real inLimit) implements IDummy {

[HybridSpec: ObjInv("0 <= level & level <= limit")]
    physical{
        Real level = inVal   : level' = limit/2 - level/2;
        Real limit = inLimit : limit' = 0;
    }

    Unit resetLimit(Real r){
        if( r >= level) limit = r;
    }

    Unit bucket(Real r){
        if (r <= level) level = level - r;
    }
}

{
	new CDummy(5,10);
}

